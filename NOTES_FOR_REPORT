[NOTES]
- increasing the number of offspring while reducing the number of max brains puts a higher dependancy on the top brain to lead the genetic evolution path
- likewise, it allows for more stability as the top performing brain will have higher number of offspring, allowing for higher preservation of sucessfull innovations
- likewise, it also means the population evolution is less unstable as the top brain is allowed to have more brains

- increasing the population count allows for a higher number of mutations per generation whilst keeping stable
- this results in faster convergence
- keeping the first low means a very unstable evolution and keeping the second low means a very slow/inneficient evolution

- a high number of starting individuals ensures a rich environment for the top brain to evolve
- ensure a sufficient number of first gen individuals controls to some extent how fast and how long the population will evolve

- because of the way the scores are divided by the specie brain count, the scores must be above 0

- doing the fitness sharing thing saves new innovations too well and destroys incremental improvements of existing inovations
- this is likelly because the max special distance was kept high in order to avoid a high number of species which would slow progress down
- TRY REDUCING THE MAX SPECIAL DIST or INCREASING THE WEIGHT OF DISJOINT/EXCESS GENES
- using my method, newer species will be time limited in their growth as if they continue to get bigger without getting better they will be deleted

- one problem with the preserve brain thing is that the top brain might eventually be isolated by all other species, eaving it at risk of being deleted to assure the brain limit
- solving this is essentially just ncreasing the max brain limit and decreasing the special distance

- - TRAINING
- between the velocity and rotation penalties, the weights need to be fixed or else the robot will just throw itself forward to match the speed

- the preserve brain option, while it is intended to introduce stability, it actually introduces stagnation

- there needs to be a clear priority in the way goals for the bot, setting equally balanced priorities makes it such that a robot that is trying to improve one aspect might end up switching goals with every mutation

- starting with a bigger initial population means the first solution is likelly closer to the final solution
- paired with a greater max brain count it means the solution converges faster as there is higher diversity

-extra simulation time will add random noise, this is due to improvements around the equilibrium point that increase the score in one way or the other (most likelly increasing the number of steps survived)
-locally there's also always noise, thus the final solution might not be the last generation